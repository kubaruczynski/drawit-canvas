!function(){function t(t){return t&&t.__esModule?t.default:t}function e(t,e,s){const i=t.createShader(e);t.shaderSource(i,s),t.compileShader(i);if(t.getShaderParameter(i,t.COMPILE_STATUS))return i;t.deleteShader(i)}class s{constructor(t=0,e=t,s=e){return this.x=t,this.y=e,this.z=s,this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(t){this[0]=t}set y(t){this[1]=t}set z(t){this[2]=t}set(t,e,s){return this[0]=t,this[1]=e,this[2]=s,this}copy(){return new s(this.x,this.y,this.z)}add(t){return new s(this.x+t.x,this.y+t.y,this.z+t.z)}sub(t){return new s(this.x-t.x,this.y-t.y,this.z-t.z)}scale(t){return new s(this.x*t,this.y*t,this.z*t)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){return new s(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}negate(){return new s(-1*this.x,-1*this.y,-1*this.z)}len(){return Math.sqrt(this.x**2+this.y**2+this.z**2)}normalize(){const t=this.len();return new s(this.x/t,this.y/t,this.z/t)}lerp(t,e){this.x=this.x+e*(t.x-this.x),this.y=this.y+e*(t.y-this.y),this.z=this.z+e*(t.z-this.z)}toArray(t,e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}}class i{constructor(t){this.tmp=new s,this.points=t,this.count=t.length,this.position=new Float32Array(6*this.count),this.prev=new Float32Array(6*this.count),this.next=new Float32Array(6*this.count),this.index=new Uint16Array(6*(this.count-1)),this.side=new Float32Array(2*this.count),this.uv=new Float32Array(4*this.count);for(let t=0;t<this.count;t++){this.side.set([-1,1],2*t);const e=t/(this.count-1);if(this.uv.set([0,e,1,e],4*t),t===this.count-1)continue;const s=2*t;this.index.set([s,s+1,s+2],3*s),this.index.set([s+2,s+1,s+3],3*(s+1))}this.updateGeometry()}updateGeometry(){this.points.forEach(((t,e)=>{t.toArray(this.position,6*e),t.toArray(this.position,6*e+3),e?(t.toArray(this.next,6*(e-1)),t.toArray(this.next,6*(e-1)+3)):(this.tmp=t.copy().sub(this.points[e+1]).add(t),this.tmp.toArray(this.prev,6*e),this.tmp.toArray(this.prev,6*e+3)),e===this.points.length-1?(this.tmp=t.copy().sub(this.points[e-1]).add(t),this.tmp.toArray(this.next,6*e),this.tmp.toArray(this.next,6*e+3)):(t.toArray(this.prev,6*(e+1)),t.toArray(this.prev,6*(e+1)+3))}))}stackNewPoint(t){this.points.push(t),this.points.shift(),this.updateGeometry()}}class n extends class{constructor(n,a,o,h,r){this.enabled=!0,this.mouse=new s,this.createCanvas=(t,e)=>{const s=document.createElement("canvas");return s.width=t,s.height=e,s},this.webGLShadersInitialize=()=>{this.vertexShader=e(this.canvasContext,this.canvasContext.VERTEX_SHADER,t("#define GLSLIFY 1\nattribute vec3 prev_position;\nattribute vec3 position;\nattribute vec3 next_position;\nattribute float side;\nattribute vec2 uv;\n\nuniform vec2 u_resolution;\n\nvoid main() {\n    //ratio wyświetlania\n    vec2 aspect = vec2(u_resolution.x / u_resolution.y, 1);\n    //przeliczanie z -1,1 na pixele\n    vec2 nextScreen = next_position.xy * aspect;\n    vec2 prevScreen = prev_position.xy * aspect;\n    //tg do wyliczenia punktu po środku\n    vec2 tangent = normalize(nextScreen - prevScreen);\n    //odwrócamy vector\n    vec2 normal = vec2(-tangent.y, tangent.x);\n    //dzielimy przez aspect, żeby wrócić do -1,1\n    normal /= aspect;\n    //10% ekranu, bo o -1,1;\n    //normal *= 0.1;\n    normal *= (1.0 - pow(abs(uv.y - 0.5) * 2.0, 2.0)) * 0.1;\n    float dist = length(nextScreen - prevScreen);\n    normal *= smoothstep(0.0, 0.05, dist);\n\n    vec4 current = vec4(position,1);\n    current.xy -= normal * side;\n\n    gl_Position = current;\n}\n")),this.fragmentShader=e(this.canvasContext,this.canvasContext.FRAGMENT_SHADER,t("precision mediump float;\n#define GLSLIFY 1\n\nuniform vec4 u_color;\n\nvoid main() {\n    gl_FragColor = u_color;\n}\n")),this.webGLProgram=function(t,e,s){const i=t.createProgram();if(t.attachShader(i,e),t.attachShader(i,s),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS))return i;t.deleteProgram(i)}(this.canvasContext,this.vertexShader,this.fragmentShader),this.canvasContext.enable(this.canvasContext.DEPTH_TEST),this.canvasContext.useProgram(this.webGLProgram);const n=this.canvasContext.getAttribLocation(this.webGLProgram,"prev_position"),a=this.canvasContext.getAttribLocation(this.webGLProgram,"position"),o=this.canvasContext.getAttribLocation(this.webGLProgram,"next_position"),h=this.canvasContext.getAttribLocation(this.webGLProgram,"side"),r=this.canvasContext.getAttribLocation(this.webGLProgram,"uv");this.prev_positionBuffer=this.canvasContext.createBuffer(),this.next_positionBuffer=this.canvasContext.createBuffer(),this.positionBuffer=this.canvasContext.createBuffer(),this.sideBuffer=this.canvasContext.createBuffer(),this.uvBuffer=this.canvasContext.createBuffer();const c=this.canvasContext.getUniformLocation(this.webGLProgram,"u_color");this.canvasContext.uniform4f(c,Math.random(),Math.random(),Math.random(),1);const l=this.canvasContext.getUniformLocation(this.webGLProgram,"u_resolution");this.resizeHandle(),this.canvasContext.viewport(0,0,this.canvasNode.width,this.canvasNode.height),this.canvasContext.clearColor(0,0,0,0),this.canvasContext.clear(this.canvasContext.COLOR_BUFFER_BIT|this.canvasContext.DEPTH_BUFFER_BIT),this.canvasContext.uniform2f(l,this.canvasNode.width,this.canvasNode.height);const d=this.canvasContext.FLOAT,v=!1,u=[];for(let t=0;t<20;t++){const e=t/19-.5,i=0,n=0;u.push(new s(e,i,n))}this.polyline=new i(u),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.prev_positionBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.prev,this.canvasContext.STATIC_DRAW),this.canvasContext.vertexAttribPointer(n,3,d,v,0,0),this.canvasContext.enableVertexAttribArray(n),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.next_positionBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.next,this.canvasContext.STATIC_DRAW),this.canvasContext.vertexAttribPointer(o,3,d,v,0,0),this.canvasContext.enableVertexAttribArray(o),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.positionBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.position,this.canvasContext.STATIC_DRAW),this.canvasContext.vertexAttribPointer(a,3,d,v,0,0),this.canvasContext.enableVertexAttribArray(a),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.sideBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.side,this.canvasContext.STATIC_DRAW),this.canvasContext.vertexAttribPointer(h,1,d,v,0,0),this.canvasContext.enableVertexAttribArray(h),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.uvBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.uv,this.canvasContext.STATIC_DRAW),this.canvasContext.vertexAttribPointer(r,2,d,v,0,0),this.canvasContext.enableVertexAttribArray(r),this.canvasContext.drawArrays(this.canvasContext.TRIANGLE_STRIP,0,40)},this.drawCursor=t=>{const e=t.offsetX,s=t.offsetY;this.mouse.x=e/this.canvasNode.width*2-1,this.mouse.y=s/this.canvasNode.height*-2+1},this.spring=.05,this.friction=.93,this.tmp=new s,this.mouseVelocity=new s,this.resizeHandle=()=>{const t=this.canvasNode.clientWidth,e=this.canvasNode.clientHeight;this.canvasNode.width==t&&this.canvasNode.height==e||(this.canvasNode.width=t,this.canvasNode.height=e)},this.sizeMultiplier=o,this.canvasHolder=n;const c=this.createCanvas(h||n.clientWidth*(o||1),r||n.clientHeight*(o||1));c.id=a,this.canvasNode=n.appendChild(c),this.canvasContext=this.canvasNode.getContext("webgl"),this.webGLShadersInitialize()}draw(){this.updateBuffersAndDraw();for(let t=this.polyline.points.length-1;t>=0;t--)t?this.polyline.points[t].lerp(this.polyline.points[t-1],.9):(this.tmp=this.mouse.copy(),this.tmp=this.tmp.sub(this.polyline.points[t]),this.tmp=this.tmp.scale(this.spring),this.mouseVelocity=this.mouseVelocity.add(this.tmp),this.mouseVelocity=this.mouseVelocity.scale(this.friction),this.polyline.points[t]=this.polyline.points[t].add(this.mouseVelocity));this.polyline.updateGeometry(),requestAnimationFrame((()=>this.draw()))}updateBuffersAndDraw(){this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.prev_positionBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.prev,this.canvasContext.STATIC_DRAW),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.next_positionBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.next,this.canvasContext.STATIC_DRAW),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.positionBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.position,this.canvasContext.STATIC_DRAW),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.sideBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.side,this.canvasContext.STATIC_DRAW),this.canvasContext.bindBuffer(this.canvasContext.ARRAY_BUFFER,this.uvBuffer),this.canvasContext.bufferData(this.canvasContext.ARRAY_BUFFER,this.polyline.uv,this.canvasContext.STATIC_DRAW),this.canvasContext.drawArrays(this.canvasContext.TRIANGLE_STRIP,0,40)}}{constructor(t,e,s,i,n){super(t,"main-canvas",s,i,n),this.isDrawing=!1,this.mouseX=0,this.mouseY=0,this.startDrawing=t=>{this.isDrawing=!0,this.mouseX=t.offsetX,this.mouseY=t.offsetY},this.stopDrawing=()=>{this.isDrawing=!1},this.doDrawing=t=>{this.drawCursor(t)},this.settings=e,this.canvasNode.addEventListener("mousedown",this.startDrawing),this.canvasNode.addEventListener("mouseup",this.stopDrawing),this.canvasNode.addEventListener("mousemove",this.doDrawing),this.canvasNode.addEventListener("touchstart",this.startDrawing),this.canvasNode.addEventListener("touchend",this.stopDrawing),this.canvasNode.addEventListener("touchmove",this.doDrawing),requestAnimationFrame((()=>this.draw()))}}class a{constructor(t,e,s,i,n){this.enabled=!0,this.createCanvas=(t,e)=>{const s=document.createElement("canvas");return s.width=t,s.height=e,s},this.resizeHandle=()=>{const t=this.canvasContext.getImageData(0,0,this.canvasNode.width,this.canvasNode.height);this.canvasNode.width=this.canvasHolder.clientWidth*(this.sizeMultiplier?this.sizeMultiplier:1),this.canvasNode.height=this.canvasHolder.clientHeight*(this.sizeMultiplier?this.sizeMultiplier:1),this.canvasContext.putImageData(t,0,0)},this.clear=()=>{this.canvasContext.fillStyle="rgba(0,0,0,0)",this.canvasContext.fillRect(0,0,this.canvasNode.width,this.canvasNode.height)},this.sizeMultiplier=s,this.canvasHolder=t;const a=this.createCanvas(i||t.clientWidth*(s||1),n||t.clientHeight*(s||1));a.id=e,this.canvasNode=t.appendChild(a),this.canvasContext=this.canvasNode.getContext("2d")}}class o extends a{constructor(t,e,s,i){super(t,"color-selection-canvas",1,s,i),this.selectedColor="rgba(255,0,0,1)",this.drawingColor="rgba(255,0,0,1)",this.selectedColorAsRGBAObject={r:255,g:0,b:0,a:1},this.isDragging=!1,this.rgbatohsla=(t,e,s,i)=>{t/=255,e/=255,s/=255;let n=Math.min(t,e,s),a=Math.max(t,e,s),o=a-n,h=0,r=0,c=0;return h=0==o?0:a==t?(e-s)/o%6:a==e?(s-t)/o+2:(t-e)/o+4,h=Math.round(60*h),h<0&&(h+=360),c=(a+n)/2,r=0==o?0:o/(1-Math.abs(2*c-1)),r=+(100*r).toFixed(1),c=+(100*c).toFixed(1),{h:h,s:r,l:c,a:i}},this.hslatorgba=(t,e,s,i)=>{e/=100,s/=100;let n=(1-Math.abs(2*s-1))*e,a=n*(1-Math.abs(t/60%2-1)),o=s-n/2,h=0,r=0,c=0;return 0<=t&&t<60?(h=n,r=a,c=0):60<=t&&t<120?(h=a,r=n,c=0):120<=t&&t<180?(h=0,r=n,c=a):180<=t&&t<240?(h=0,r=a,c=n):240<=t&&t<300?(h=a,r=0,c=n):300<=t&&t<360&&(h=n,r=0,c=a),h=Math.round(255*(h+o)),r=Math.round(255*(r+o)),c=Math.round(255*(c+o)),{r:h,g:r,b:c,a:i}},this.setNewHue=t=>{const e=this.rgbatohsla(this.selectedColorAsRGBAObject.r,this.selectedColorAsRGBAObject.g,this.selectedColorAsRGBAObject.b,this.selectedColorAsRGBAObject.a),s=this.hslatorgba(t,100,50,e.a),i=this.hslatorgba(t,e.s,e.l,e.a);this.selectedColor="rgba("+s.r+","+s.g+","+s.b+","+s.a+")",this.drawingColor="rgba("+i.r+","+i.g+","+i.b+","+i.a+")",this.selectedColorAsRGBAObject=i,this.onColorSelect(this.drawingColor),this.draw()},this.changeColor=t=>{const e=t.offsetX,s=t.offsetY,i=this.canvasContext.getImageData(e,s,1,1).data;this.drawingColor="rgba("+i[0]+","+i[1]+","+i[2]+",1)",this.selectedColorAsRGBAObject={r:i[0],g:i[1],b:i[2],a:i[3]},this.onColorSelect(this.drawingColor)},this.drawGradientsOnColorSelectionCanvas=()=>{const t=this.canvasContext.createLinearGradient(0,0,this.canvasNode.width,0);t.addColorStop(0,"rgba(255,255,255,1)"),t.addColorStop(1,"rgba(255,255,255,0)"),this.canvasContext.fillStyle=t,this.canvasContext.fillRect(0,0,this.canvasNode.width,this.canvasNode.height);const e=this.canvasContext.createLinearGradient(0,0,0,this.canvasNode.height);e.addColorStop(0,"rgba(0,0,0,0)"),e.addColorStop(1,"rgba(0,0,0,1)"),this.canvasContext.fillStyle=e,this.canvasContext.fillRect(0,0,this.canvasNode.width,this.canvasNode.height)},this.draw=()=>{this.canvasContext.fillStyle=this.selectedColor,this.canvasContext.fillRect(0,0,this.canvasNode.width,this.canvasNode.height),this.drawGradientsOnColorSelectionCanvas()},this.onColorSelect=e,this.canvasNode.addEventListener("click",this.changeColor),this.canvasNode.addEventListener("mousedown",(t=>{this.isDragging=!0,this.changeColor(t)})),this.canvasNode.addEventListener("mouseup",(t=>{this.isDragging=!1})),this.canvasNode.addEventListener("mousemove",(t=>{this.isDragging&&this.changeColor(t)})),this.draw()}}class h extends a{constructor(t,e,s,i){super(t,"hue-selection-canvas",1,s,i),this.selectedHue="rgba(0,0,0,1)",this.isDragging=!1,this.changeHue=t=>{const e=t.offsetX,s=t.offsetY,i=this.canvasContext.getImageData(e,s,1,1).data,n=this.getHueFromRGB(i[0],i[1],i[2]);this.onHueSelect(n)},this.getHueFromRGB=(t,e,s)=>{t/=255,e/=255,s/=255;let i=Math.min(t,e,s),n=Math.max(t,e,s),a=n-i,o=0;return o=0==a?0:n==t?(e-s)/a%6:n==e?(s-t)/a+2:(t-e)/a+4,o=Math.round(60*o),o<0&&(o+=360),o},this.draw=()=>{this.canvasContext.rect(0,0,this.canvasNode.width,this.canvasNode.height);const t=this.canvasContext.createLinearGradient(0,0,0,this.canvasNode.height);t.addColorStop(0,"rgba(255, 0, 0, 1)"),t.addColorStop(.17,"rgba(255, 255, 0, 1)"),t.addColorStop(.34,"rgba(0, 255, 0, 1)"),t.addColorStop(.51,"rgba(0, 255, 255, 1)"),t.addColorStop(.68,"rgba(0, 0, 255, 1)"),t.addColorStop(.85,"rgba(255, 0, 255, 1)"),t.addColorStop(1,"rgba(255, 0, 0, 1)"),this.canvasContext.fillStyle=t,this.canvasContext.fill()},this.onHueSelect=e,this.canvasNode.addEventListener("click",this.changeHue),this.canvasNode.addEventListener("mousedown",(t=>{this.isDragging=!0,this.changeHue(t)})),this.canvasNode.addEventListener("mouseup",(t=>{this.isDragging=!1})),this.canvasNode.addEventListener("mousemove",(t=>{this.isDragging&&this.changeHue(t)})),this.draw()}}class r{constructor(t){this.currentColor="rgba(255,0,0,1)",this.pencilWidth=15,this.changeCurrentlySelectedColor=t=>{this.currentColor=t,this.colorDisplay.style.background=t},this.changePencilSize=t=>{this.pencilWidth=Number(t.target.value),this.colorDisplay.style.width=this.pencilWidth+"px",this.colorDisplay.style.height=this.pencilWidth+"px"};const e=document.createElement("div");e.id="settings-holder",t.appendChild(e);const s=document.createElement("div");s.id="current-color-wrapper",e.appendChild(s);const i=document.createElement("div");i.id="current-color",i.style.background=this.currentColor,s.appendChild(i),this.colorDisplay=i;const n=document.createElement("input");n.type="range",n.min="1",n.max="50",n.value="15",n.oninput=this.changePencilSize,n.id="pencil-size-picker",e.appendChild(n),this.sizePicker=n;const a=document.createElement("div");a.id="color-selection-wrapper",e.appendChild(a);const r=document.createElement("div");r.id="hue-selection-wrapper",e.appendChild(r),this.colorPicker=new o(a,this.changeCurrentlySelectedColor),this.huePicker=new h(r,this.colorPicker.setNewHue),this.changeCurrentlySelectedColor("rgba(255,0,0,1)"),this.changePencilSize({target:{value:"15"}})}}class c extends a{constructor(t,e){super(t,"background-canvas",e),this.draw=()=>{const t=this.canvasNode.width,e=this.canvasNode.height;this.canvasContext.fillStyle="white",this.canvasContext.fillRect(0,0,t,e);const s=this.canvasContext;s.translate(.5,.5),s.beginPath();const i=200;for(let i=t/2,n=i;i<=t;i+=40,n-=40)for(let a=e/2,o=a;a<=e;a+=40,o-=40)s.moveTo(i,0),s.lineTo(i,e),s.moveTo(n,0),s.lineTo(n,e),s.moveTo(0,a),s.lineTo(t,a),s.moveTo(0,o),s.lineTo(t,o);s.lineWidth=1,s.strokeStyle="rgb(189,189,189)",s.stroke(),s.beginPath(),s.translate(.5,.5),s.lineWidth=2,s.strokeStyle="rgb(170,170,170)";for(let n=t/2,a=n;n<=t;n+=i,a-=i)for(let o=e/2,h=o;o<=e;o+=i,h-=i)s.moveTo(n,0),s.lineTo(n,e),s.moveTo(a,0),s.lineTo(a,e),s.moveTo(0,o),s.lineTo(t,o),s.moveTo(0,h),s.lineTo(t,h);s.stroke()},this.resizeBackgroundHandle=()=>{this.resizeHandle(),this.draw()}}}const l=document.getElementById("app");new class{constructor(t){this.mainAppHolder=t,this.canvasSettings=new r(t),this.canvasBackground=new c(t,.95),this.canvasBackground.draw(),this.mainCanvas=new n(t,this.canvasSettings,.95),window.onresize=()=>{this.mainCanvas.resizeHandle(),this.canvasBackground.resizeBackgroundHandle()}}}(l)}();
//# sourceMappingURL=index.285e6f42.js.map
